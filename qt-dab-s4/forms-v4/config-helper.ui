<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>configWidget</class>
 <widget class="QWidget" name="configWidget">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>343</width>
    <height>737</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Configuration</string>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout_2">
   <item>
    <layout class="QFormLayout" name="formLayout">
     <item row="0" column="0">
      <widget class="QLabel" name="label">
       <property name="text">
        <string>mute time (in minutes)</string>
       </property>
      </widget>
     </item>
     <item row="0" column="1">
      <widget class="smallSpinBox" name="muteTimeSetting">
       <property name="toolTip">
        <string>Set here the mute time in minutes</string>
       </property>
      </widget>
     </item>
     <item row="1" column="0">
      <widget class="QLabel" name="label_2">
       <property name="text">
        <string>switch time (in seconds)</string>
       </property>
      </widget>
     </item>
     <item row="1" column="1">
      <widget class="smallSpinBox" name="switchDelaySetting">
       <property name="toolTip">
        <string>Set here the delay, when searching for data in a channel, in seconds</string>
       </property>
      </widget>
     </item>
    </layout>
   </item>
   <item>
    <layout class="QHBoxLayout" name="horizontalLayout_4">
     <item>
      <widget class="QComboBox" name="scanmodeSelector">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Choose one of three modes for scanning&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <item>
        <property name="text">
         <string>single scan</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>scan to data</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>continuous</string>
        </property>
       </item>
      </widget>
     </item>
     <item>
      <widget class="smallPushButton" name="skipList_button">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;show or hide the skipList. Updates in the skipList will be saved.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>skipList</string>
       </property>
      </widget>
     </item>
     <item>
      <widget class="smallPushButton" name="skipFile_button">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Select a file for the skipList. If the file does not exist yet, it will be created and initialized with a skipList with no channels set to skip.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>skipFile</string>
       </property>
      </widget>
     </item>
    </layout>
   </item>
   <item>
    <widget class="QCheckBox" name="motslideSelector">
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;MOT slides can be displayed as (small) part of the technical data widget or in a separate widget. If set, MOT slides are displayed in a separate widget.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="text">
      <string>    MOT slides on separate widget</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QCheckBox" name="saveServiceSelector">
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;save on program exit the name of the current service - if any - and select this service after restarting.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="text">
      <string>    save service on exit</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QCheckBox" name="tii_detectorMode">
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;a second implementation of the tii decoder can be selected here. The decoder &amp;quot;sees&amp;quot; more tii data, but also more erroneous data.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="text">
      <string>    new tii detector</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QCheckBox" name="closeDirect">
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If you are bored with the explicit request to stop, touch this one, and stopping is direct&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="text">
      <string>  close without asking</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QCheckBox" name="loggerButton">
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Sometime one wants to see what was done, the logger just dumps some data into a file, showing the selections made.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="text">
      <string>  logger</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QCheckBox" name="utcSelector">
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If you want to see UTC in the logs select this one.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="text">
      <string> utc Selector</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QCheckBox" name="epgSelector">
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Settings this instructs the software to automtically start an EPG service in an ensemble&lt;/p&gt;&lt;p&gt;when the ensemble is detected.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="text">
      <string>start epg automatic</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QCheckBox" name="epg2xmlSelector">
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The EPG detector has two components, one collecting data to present as &amp;quot;time table&amp;quot; for today,&lt;/p&gt;&lt;p&gt;the other one - using a library written by Julian Cable from the BBC - to generate textual xml.&lt;/p&gt;&lt;p&gt;If selected, the xml will be generated. Note howevet that we encountered at least one example&lt;/p&gt;&lt;p&gt;here the library generating the textual xml causes a crash.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="text">
      <string> epg to xml</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QCheckBox" name="onTop">
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Set in the configuration whether or not the main widget should ALWAYS be op top. Note that setting will be applied the next time the program will start.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="text">
      <string>main widget on top</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QCheckBox" name="autoBrowser">
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Set in the configuration that on starting the http service a browser will have to be started manually. Default is browser starts automatically. Effective immediately&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="text">
      <string>start browser manually</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QCheckBox" name="transmitterTags">
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Set in the configuration that - rather than showing all ttransmitters on a map - only the transmitters that are seen for the currrent channel are made visible.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="text">
      <string>show transmitters of current channel</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QCheckBox" name="transmSelector">
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;When this option is set, transmitter data, that is visible on the map, is saved in a &amp;quot;.csv&amp;quot; file.&lt;/p&gt;&lt;p&gt;On starting the http handler, a file menu is shown&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="text">
      <string>save transmitter data</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QCheckBox" name="saveSlides">
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If set, the slides appearing during transmissions are saved.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="text">
      <string>save slides</string>
     </property>
    </widget>
   </item>
   <item>
    <layout class="QHBoxLayout" name="horizontalLayout_2">
     <item>
      <widget class="QPushButton" name="loadTableButton">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Touching this button instructs the software to (try to) load a so-called tii table, a table with the&lt;/p&gt;&lt;p&gt;encodings of tii data.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>load table</string>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QPushButton" name="portSelector">
       <property name="text">
        <string>port select</string>
       </property>
      </widget>
     </item>
    </layout>
   </item>
   <item>
    <layout class="QHBoxLayout" name="horizontalLayout_3">
     <item>
      <widget class="QLabel" name="label_3">
       <property name="text">
        <string> service order in list</string>
       </property>
      </widget>
     </item>
     <item>
      <layout class="QVBoxLayout" name="verticalLayout">
       <item>
        <widget class="QRadioButton" name="orderAlfabetical">
         <property name="text">
          <string>alphabetically</string>
         </property>
         <attribute name="buttonGroup">
          <string notr="true">buttonGroup</string>
         </attribute>
        </widget>
       </item>
       <item>
        <widget class="QRadioButton" name="orderServiceIds">
         <property name="text">
          <string>serviceIds</string>
         </property>
         <attribute name="buttonGroup">
          <string notr="true">buttonGroup</string>
         </attribute>
        </widget>
       </item>
       <item>
        <widget class="QRadioButton" name="ordersubChannelIds">
         <property name="text">
          <string>subchannelIds</string>
         </property>
         <attribute name="buttonGroup">
          <string notr="true">buttonGroup</string>
         </attribute>
        </widget>
       </item>
      </layout>
     </item>
    </layout>
   </item>
   <item>
    <layout class="QHBoxLayout" name="horizontalLayout">
     <item>
      <widget class="smallPushButton" name="dlTextButton">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Save the lines of text that appear as dynamic label&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>dlText</string>
       </property>
      </widget>
     </item>
     <item>
      <widget class="smallPushButton" name="set_coordinatesButton">
       <property name="text">
        <string>coordinates</string>
       </property>
      </widget>
     </item>
    </layout>
   </item>
  </layout>
 </widget>
 <customwidgets>
  <customwidget>
   <class>smallPushButton</class>
   <extends>QPushButton</extends>
   <header>smallpushbutton.h</header>
  </customwidget>
  <customwidget>
   <class>smallSpinBox</class>
   <extends>QSpinBox</extends>
   <header location="global">smallspinbox.h</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
 <buttongroups>
  <buttongroup name="buttonGroup"/>
 </buttongroups>
</ui>
